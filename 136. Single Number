Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1
class Solution {
    public static int singleNumber(int[] nums) {
        for(int i=0;i<nums.length;i++){
            int count =0;
            for(int j=0;j<nums.length;j++){
                if(nums[i]==nums[j]){
                    count++;
            
                }
            }
            if(count!=2){
                return nums[i];
            }
        }
        return -1 ;
        
    }
    public static void main (String[]args){
        int nums[]={1,1,2,2,3,3,5};
        System.out.println(singleNumber(nums));
    }
}
