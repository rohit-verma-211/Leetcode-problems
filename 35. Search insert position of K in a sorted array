Given a sorted array arr[] consisting of N distinct integers and an integer K, the task is to find the index of K, if itâ€™s present in the array arr[]. Otherwise, find the index where K must be inserted to keep the array sorted.

Examples: 


Input: arr[] = {1, 3, 5, 6}, K = 5
Output: 2
Explanation: Since 5 is found at index 2 as arr[2] = 5, the output is 2.


Input: arr[] = {1, 3, 5, 6}, K = 2
Output: 1
Explanation: Since 2 is not present in the array but can be inserted at index 1 to make the array sorted.

class Solution {
    public static int searchInsert(int[] nums, int target) {
        int len=nums.length;
        int i=0;
        for(i=0;i<len;i++){
            if(nums[i]==target){
                return i;
            }
            else if(target<nums[i]){

                return i;

            }
        }
        return i;
        
    }
    public static void main (String[]args){
        int nums[]={1,3,4,5};
        int target = 2;
        System.out.println(searchInsert(nums,target));

        

    }
}
